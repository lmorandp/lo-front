[{"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyCreate.js":"1","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/App.js":"2","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/Contacts.js":"3","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionList.js":"4","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyAppBar.js":"5","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/EditActions.js":"6","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyQuickCreateButton.js":"7","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/index.js":"8","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsList.js":"9","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyList.js":"10","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesCreate.js":"11","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsList.js":"12","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/Theme.js":"13","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MySideMenu.js":"14","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyUserMenu.js":"15","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsCreate.js":"16","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/reportWebVitals.js":"17","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyLayout.js":"18","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsEdit.js":"19","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsCreate.js":"20","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyEdit.js":"21","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesList.js":"22","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesEdit.js":"23","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionCreate.js":"24","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionEdit.js":"25","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/ListActions.js":"26","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsQuickCreateButton.js":"27","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/Company.js":"28","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSources.js":"29","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPosition.js":"30","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/Projects.js":"31","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/DataProvider.js":"32","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/authProvider.js":"33","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/Resources.js":"34","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/Borrower.js":"35","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerQuickCreateButton.js":"36","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsEdit.js":"37","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerFormField.js":"38","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/ModalCreateButton.js":"39","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/QuickCreateButton.js":"40","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyFormField.js":"41","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactFormField.js":"42"},{"size":2383,"mtime":1612820268188,"results":"43","hashOfConfig":"44"},{"size":532,"mtime":1613417081880,"results":"45","hashOfConfig":"44"},{"size":394,"mtime":1613413545435,"results":"46","hashOfConfig":"44"},{"size":585,"mtime":1611871314022,"results":"47","hashOfConfig":"44"},{"size":847,"mtime":1612978248737,"results":"48","hashOfConfig":"44"},{"size":323,"mtime":1612552527255,"results":"49","hashOfConfig":"44"},{"size":3732,"mtime":1613426777292,"results":"50","hashOfConfig":"44"},{"size":458,"mtime":1612219821972,"results":"51","hashOfConfig":"44"},{"size":806,"mtime":1611791227463,"results":"52","hashOfConfig":"44"},{"size":783,"mtime":1612478691603,"results":"53","hashOfConfig":"44"},{"size":1216,"mtime":1611791914996,"results":"54","hashOfConfig":"44"},{"size":754,"mtime":1613511176779,"results":"55","hashOfConfig":"44"},{"size":1434,"mtime":1613425846499,"results":"56","hashOfConfig":"44"},{"size":2676,"mtime":1613519662170,"results":"57","hashOfConfig":"44"},{"size":468,"mtime":1613410968980,"results":"58","hashOfConfig":"44"},{"size":9155,"mtime":1613510562902,"results":"59","hashOfConfig":"44"},{"size":362,"mtime":1610642975026,"results":"60","hashOfConfig":"44"},{"size":343,"mtime":1611880642413,"results":"61","hashOfConfig":"44"},{"size":2610,"mtime":1613495457504,"results":"62","hashOfConfig":"44"},{"size":2719,"mtime":1612820244541,"results":"63","hashOfConfig":"44"},{"size":2293,"mtime":1612389063430,"results":"64","hashOfConfig":"44"},{"size":628,"mtime":1611788640382,"results":"65","hashOfConfig":"44"},{"size":1200,"mtime":1611791799901,"results":"66","hashOfConfig":"44"},{"size":1215,"mtime":1611872583554,"results":"67","hashOfConfig":"44"},{"size":1205,"mtime":1611872590332,"results":"68","hashOfConfig":"44"},{"size":462,"mtime":1611788424606,"results":"69","hashOfConfig":"44"},{"size":3957,"mtime":1613074473118,"results":"70","hashOfConfig":"44"},{"size":370,"mtime":1613413552552,"results":"71","hashOfConfig":"44"},{"size":470,"mtime":1613413539216,"results":"72","hashOfConfig":"44"},{"size":424,"mtime":1613413525738,"results":"73","hashOfConfig":"44"},{"size":384,"mtime":1613510857132,"results":"74","hashOfConfig":"44"},{"size":1647,"mtime":1613413807466,"results":"75","hashOfConfig":"44"},{"size":1386,"mtime":1613413807083,"results":"76","hashOfConfig":"44"},{"size":535,"mtime":1613416901216,"results":"77","hashOfConfig":"44"},{"size":172,"mtime":1613416864688,"results":"78","hashOfConfig":"44"},{"size":6599,"mtime":1613419280642,"results":"79","hashOfConfig":"44"},{"size":10218,"mtime":1613519072947,"results":"80","hashOfConfig":"44"},{"size":2305,"mtime":1613511555615,"results":"81","hashOfConfig":"44"},{"size":823,"mtime":1613433060118,"results":"82","hashOfConfig":"44"},{"size":2983,"mtime":1613504431057,"results":"83","hashOfConfig":"44"},{"size":1488,"mtime":1613495977555,"results":"84","hashOfConfig":"44"},{"size":1826,"mtime":1613497071237,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1lenir8",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyCreate.js",[],["186","187"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/App.js",["188","189"],"import * as React from \"react\";\nimport { HydraAdmin } from \"@api-platform/admin\";\n\nimport authProvider from \"./components/authProvider\";\nimport MyLayout from './layout/MyLayout';\nimport DataProvider from './components/DataProvider.js'\nimport Resources from './components/Resources';\n\nconst entrypoint = process.env.REACT_APP_API_ENTRYPOINT;\n\nexport default () => (\n    <HydraAdmin entrypoint={entrypoint} layout={MyLayout}  dataProvider={DataProvider} // authProvider = {authProvider} \n    >\n        {Resources}\n    </HydraAdmin>\n);","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/Contacts.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionList.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyAppBar.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/EditActions.js",["190"],"import React from 'react';\nimport { SaveButton, TopToolbar, ListButton } from 'react-admin';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\n\n\nexport const EditActions = ({ basePath, data }) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n    </TopToolbar>\n);\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyQuickCreateButton.js",["191","192"],"import React, { useState } from 'react';\nimport { useForm } from 'react-final-form';\nimport {\n    required,\n    Button,\n    SaveButton,\n    TextInput,\n    useCreate,\n    useNotify,\n    FormWithRedirect,\n    SaveContextProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nfunction CompanyQuickCreateButton({onChange}) {\n    const [open, setOpen] = useState(false);\n    const [create, { loading }] = useCreate('companies');\n    const notify = useNotify();\n    const createForm = useForm();\n\n    const handleClick = () => {\n        setOpen(true)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    };\n    const handleSubmit = async values => {\n        create(\n            {payload: {data : values} },\n            {\n                onSuccess: ({ data }) => {\n                    setOpen(false);\n                    createForm.change('id', data.id);\n                    onChange();\n                },\n                onFailure: ({ error }) => {\n                    notify(error.message, 'error');\n                }\n            }\n        );\n    };\n\n    return (\n        <>\n            <Button onClick = {handleClick} label = ''>\n                <IconContentAdd />\n            </Button>\n            <Dialog fullWidth open = {open} onClose = {handleClose} aria-label = 'Create post'>\n                <DialogTitle>Create a New Company</DialogTitle>\n                <FormWithRedirect resource='companies' save={handleSubmit}\n                    render={({\n                        handleSubmitWithRedirect,\n                        pristine,\n                        saving\n                    }) => (\n                        <>\n                           <DialogContent>\n                                <TextInput fullWidth  label = 'Company Name' source = 'name' id = 'companyName2' />\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' id = 'streetAddress2' />\n                                <TextInput fullWidth label = 'City' source = 'city' id = 'city2' />\n                                <TextInput fullWidth label = 'State' source = 'state' id = 'state2'/>\n                                <TextInput fullWidth label = 'Country' source = 'country' id = 'country2'/>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' id = 'postalCode2'/>\n                           </DialogContent>\n                           <DialogActions>\n                                <Button\n                                    label=\"Cancel\"\n                                    onClick={handleClose}\n                                    disabled={loading}\n                                >\n                                    <IconCancel />\n                                </Button>\n                                <SaveButton\n                                    handleSubmitWithRedirect={\n                                        handleSubmitWithRedirect\n                                    }\n                                    pristine={pristine}\n                                    saving={saving}\n                                    disabled={loading}\n                                    label = 'Save'\n                                />\n                            </DialogActions>\n                        </>\n                    )}\n                />\n            </Dialog>\n        </>\n    );\n}\n\nexport default CompanyQuickCreateButton;",["193","194"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/index.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsList.js",["195"],"import React, {cloneElement} from 'react';\nimport {ListGuesser} from \"@api-platform/admin\";\nimport {ListActions} from '../actions/ListActions';\nimport {\n    TextField,\n    EmailField,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    contact: {\n       fontSize: '1.25em'\n    }\n\n});\n\nexport const ContactsList = props => {\n    const classes = useStyles();\n    return (\n         <ListGuesser  className = {classes.headers} actions = {<ListActions />} title = 'Contacts' {...props}>\n             <TextField className = {classes.contact} source = 'firstName' />\n             <TextField className = {classes.contact} source = 'lastName' />\n             <EmailField className = {classes.contact} source = 'email' />\n         </ListGuesser>\n    )\n}\n\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyList.js",["196","197"],"import React from 'react';\nimport {ListGuesser} from '@api-platform/admin';\nimport {List, Datagrid, TextField} from 'react-admin';\nimport {ListActions} from '../actions/ListActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    contact: {\n       fontSize: '1.25em'\n    },\n\n});\n\n\nexport const CompanyList = props => {\n    const classes = useStyles();\n    return (\n         <ListGuesser  className = {classes.headers} actions = {<ListActions />} title = 'Companies' {...props}>\n                <TextField className = {classes.contact} source = 'name' />\n                <TextField className = {classes.contact} source = 'city' />\n                <TextField className = {classes.contact} source = \"state\" />\n         </ListGuesser>\n    )\n}\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesCreate.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsList.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/Theme.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MySideMenu.js",["198","199"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyUserMenu.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsCreate.js",["200"],"import React from 'react';\nimport {TextInput, AutocompleteInput, NumberInput, Datagrid, ReferenceInput, DateInput, BooleanInput, required, \n    NullableBooleanInput, Create, TabbedForm, FormTab} from 'react-admin';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '90%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '15%'\n    },\n    nestedGridItem: {\n        width: '95%'\n    },\n    addButton: {\n        width: '5%'\n    },\n    selectItem: {\n        width: '90%'\n    }\n  }));\n\nconst ProjectTitle = ({record}) => {\n    return 'Create a new Project'\n}\n\nexport const ProjectsCreate = props => {\n    const classes = useStyles();\n    return(\n        <Create title = {<ProjectTitle />} actions = {<EditActions />} {...props}>\n            <TabbedForm>\n                <FormTab label = 'General Info'>\n                    <>\n                    <div className = {classes.root}>\n                        <Grid container direction=\"row\" alignItems=\"center\" spacing={6}>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                 <Grid container direction = 'row' alignItems=\"center\" spacing = {0}>\n                                    <Grid item className = {classes.nestedGridItem}>\n                                        <ReferenceInput source='operatingCompany' reference='companies' label='Operating Company' \n                                            filterToQuery={(searchText) => ({ title: searchText })} validate={[required()]}>\n                                                <AutocompleteInput fullWidth optionText='name'/>\n                                        </ReferenceInput>\n                                    </Grid>\n                                    <Grid item className = {classes.addButton}>\n                                    <ModalCreateButton\n                                        dialogResource=\"companies\"\n                                        dialogFormField=\"companies\"\n                                        dialogTitle=\"Add a Company\"\n                                        actionTypeCreate\n                                        >\n                                            <CompanyFormField />\n                                    </ModalCreateButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>                           \n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'City' source = 'city' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'State' source = 'state' validate={[required()]}/>\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Country' source = 'country' validate={[required()]}/>\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Purchase Land and Building' source = 'purchaseLandAndBuilding' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Tenant Improvement' source = 'tenantImprovement' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Eligible Fees' source = 'eligibleFees' validate={[required()]}/>\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <BooleanInput fullWidth label = 'Payment Penalty' source = 'paymentPenalty' validate={[required()]}/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    </>  \n                </FormTab>\n                <FormTab label = 'Additional Information' path = 'Additional_Information'>\n                    <>\n                        <div className = {classes.root}>\n                            <Grid container direction=\"row\" alignItems=\"center\" spacing={6}>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'General Description' source = 'generalDescription' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Financial Description' source = 'financialDescription' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Public Record Report' source = 'publicRecordReport' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <DateInput fullWidth label = 'Period Ending Date' source = 'periodEndingDate' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Cash on Hand' source = 'cashOnHand' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Working Capital' source = 'workingCapital' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Liquidity Ratio' source = 'liquidityRatio' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Liquidity Strength' source = 'liquidityStrength' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Bank Debts' source = 'bankDebts' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Debt of Worth' source = 'debtOfWorth'/>\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Sale Increases' source = 'saleIncreases' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput style = {{width: '100%'}} label = 'SBA Appraisal Approval' source = 'sbaAppraisalApproval' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput  style = {{width: '100%'}} label = 'Environmental Approval' source = 'environmentalApproval' />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </>\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/reportWebVitals.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyLayout.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsEdit.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsCreate.js",["201","202"],"import React from 'react';\nimport {CreateGuesser} from \"@api-platform/admin\";\nimport { Create, SimpleForm, TextInput} from 'react-admin';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '80%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '15%'\n    }\n  }));\n\nconst ContactsTitle = ({record}) => {\n    return 'Create a new Contact'\n}\n\nexport const ContactsCreate = props => {\n    const classes = useStyles();\n    return(\n        <CreateGuesser title = {<ContactsTitle />} actions = {<EditActions />} {...props}>\n                <div className = {classes.root}>\n                    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth  label = 'First Name' source = 'firstName' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth  label = 'Last Name' source = 'lastName' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth  label = 'Email Address' source = 'email' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'Street Address' source = 'streetAddress' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'City' source = 'city' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'State' source = 'state' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'Country' source = 'country' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'Postal Code' source = 'postalCode' />\n                        </Grid>\n                    </Grid>\n                </div>\n        </CreateGuesser>\n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyEdit.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesList.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesEdit.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionCreate.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionEdit.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/ListActions.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsQuickCreateButton.js",["203","204"],"import React, { useState } from 'react';\nimport { useForm } from 'react-final-form';\nimport {\n    required,\n    Button,\n    SaveButton,\n    TextInput,\n    useCreate,\n    useNotify,\n    FormWithRedirect,\n    SaveContextProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nfunction CompanyQuickCreateButton({onChange}) {\n    const [open, setOpen] = useState(false);\n    const [create, { loading }] = useCreate('contacts');\n    const notify = useNotify();\n    const createForm = useForm();\n\n    const handleClick = () => {\n        setOpen(true)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    };\n    const handleSubmit = async values => {\n        create(\n            {payload: {data : values} },\n            {\n                onSuccess: ({ data }) => {\n                    setOpen(false);\n                    createForm.change('id', data.id);\n                    onChange();\n                },\n                onFailure: ({ error }) => {\n                    notify(error.message, 'error');\n                }\n            }\n        );\n    };\n\n    return (\n        <>\n            <Button onClick = {handleClick} label = ''>\n                <IconContentAdd />\n            </Button>\n            <Dialog fullWidth open = {open} onClose = {handleClose} aria-label = 'Create post'>\n                <DialogTitle>Create a New Contact</DialogTitle>\n                <FormWithRedirect resource='contacts' save={handleSubmit}\n                    render={({\n                        handleSubmitWithRedirect,\n                        pristine,\n                        saving\n                    }) => (\n                        <>\n                           <DialogContent>\n                                <TextInput fullWidth  label = 'First Name' source = 'firstName' id = 'firstName2' />\n                                <TextInput fullWidth  label = 'Last Name' source = 'lastName' id = 'lastName2' />\n                                <TextInput fullWidth  label = 'Email Address' source = 'email' id = 'email2' />\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' id = 'streetAddress3' />\n                                <TextInput fullWidth label = 'City' source = 'city' id = 'city3' />\n                                <TextInput fullWidth label = 'State' source = 'state' id = 'state3'/>\n                                <TextInput fullWidth label = 'Country' source = 'country' id = 'country3'/>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' id = 'postalCode3'/>\n                           </DialogContent>\n                           <DialogActions>\n                                <Button\n                                    label=\"Cancel\"\n                                    onClick={handleClose}\n                                    disabled={loading}\n                                >\n                                    <IconCancel />\n                                </Button>\n                                <SaveButton\n                                    handleSubmitWithRedirect={\n                                        handleSubmitWithRedirect\n                                    }\n                                    pristine={pristine}\n                                    saving={saving}\n                                    disabled={loading}\n                                    label = 'Save'\n                                />\n                            </DialogActions>\n                        </>\n                    )}\n                />\n            </Dialog>\n        </>\n    );\n}\n\nexport default CompanyQuickCreateButton;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/Company.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSources.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPosition.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/Projects.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/DataProvider.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/authProvider.js",["205"],"import jwtDecode from \"jwt-decode\";\n\nexport default {\n  login: ({ username, password }) => {\n    const request = new Request(\n      `${process.env.REACT_APP_API_ENTRYPOINT}/authentication_token`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email: username, password }),\n        headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      }\n    );\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ token }) => {\n        localStorage.setItem(\"token\", token);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem(\"token\");\n    return Promise.resolve();\n  },\n  checkAuth: () => {\n    try {\n      if (\n        !localStorage.getItem(\"token\") ||\n        new Date().getTime() / 1000 >\n          jwtDecode(localStorage.getItem(\"token\"))?.exp\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve();\n    } catch (e) {\n      // override possible jwtDecode error\n      return Promise.reject();\n    }\n  },\n  checkError: (err) => {\n    if ([401, 403].includes(err?.status || err?.response?.status)) {\n      localStorage.removeItem(\"token\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  getPermissions: () => Promise.resolve(),\n};","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/Resources.js",["206","207"],"import React from 'react';\nimport companyResource from './companies/Company';\nimport contactResource from './contacts/Contacts';\nimport financingSourceResource from './financing_sources/FinancingSources';\nimport lienPositionResource from './lien_positions/LienPosition';\nimport projectResource from './projects/Projects';\nimport borrowerResource from './borrowers/Borrower';\n\nexport default [\n    companyResource,\n    contactResource,\n    financingSourceResource,\n    lienPositionResource,\n    projectResource,\n    borrowerResource,\n];","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/Borrower.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerQuickCreateButton.js",["208","209","210","211","212","213"],"import React, { useState } from 'react';\nimport { useForm } from 'react-final-form';\nimport {\n    required,\n    Button,\n    SaveButton,\n    TextInput,\n    useCreate,\n    useNotify,\n    FormWithRedirect,\n    ReferenceInput, \n    AutocompleteInput,\n    SelectInput,\n    SaveContextProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport CompanyQuickCreateButton from '../companies/CompanyQuickCreateButton';\nimport ContactsQuickCreateButton from '../contacts/ContactsQuickCreateButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '95%'\n    },\n    nestedGridItem: {\n        width: '85%'\n    },\n    addButton: {\n        width: '5%'\n    },\n    suggestionsContainerOpen: {\n        zIndex: 2100,\n      }\n}));\n\nfunction BorrowerQuickCreateButton({onChange}) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [create, { loading }] = useCreate('borrowers');\n    const notify = useNotify();\n    const createForm = useForm();\n\n    const handleClick = () => {\n        setOpen(true)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    };\n    const handleSubmit = async values => {\n        create(\n            {payload: {data : values} },\n            {\n                onSuccess: ({ data }) => {\n                    setOpen(false);\n                    createForm.change('id', data.id);\n                    onChange();\n                },\n                onFailure: ({ error }) => {\n                    notify(error.message, 'error');\n                }\n            }\n        );\n    };\n\n    return (\n        <>\n            <Button onClick = {handleClick} label = ''>\n                <IconContentAdd />\n            </Button>\n            <Dialog fullWidth open = {open} onClose = {handleClose} aria-label = 'Create post'>\n                <DialogTitle>Create a new Borrower</DialogTitle>\n                <FormWithRedirect resource='borrowers' save={handleSubmit}\n                    render={({\n                        handleSubmitWithRedirect,\n                        pristine,\n                        saving\n                    }) => (\n                        <>\n                           <DialogContent>\n                           <div className = {classes.root}>\n                                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}> \n                                    <Grid item className = {classes.gridItem}>\n                                        <Grid container direction = 'row' alignItems=\"center\" spacing = {0}>\n                                            <Grid item className = {classes.nestedGridItem}>\n                                                <ReferenceInput source='company' reference='companies' label='Company' \n                                                    filterToQuery={(searchText) => ({ title: searchText })}>\n                                                        <AutocompleteInput fullWidth options = {{suggestionsContainerProps: {className : classes.suggestionsContainerOpen}}}\n                                                            optionText='name'/>\n                                                </ReferenceInput>\n                                            </Grid>\n                                            <Grid item className = {classes.addButton}>\n                                                    <CompanyQuickCreateButton />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item className = {classes.gridItem}>\n                                        <Grid container direction = 'row' alignItems=\"center\" spacing = {0}>\n                                            <Grid item className = {classes.nestedGridItem}>\n                                                <ReferenceInput source='contact' reference='contacts' label='Contact' \n                                                    filterToQuery={(searchText) => ({ title: searchText })}>\n                                                        <AutocompleteInput  fullWidth options = {{suggestionsContainerProps: {className : classes.suggestionsContainerOpen}}} \n                                                            optionText = {\n                                                                contact => `${contact.firstName}` + ' ' + `${contact.lastName}` } \n                                                        />\n                                                </ReferenceInput>\n                                            </Grid>\n                                            <Grid item className = {classes.addButton}>\n                                                    <ContactsQuickCreateButton />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                           </div>\n                           </DialogContent>\n                           <DialogActions>\n                                <Button\n                                    label=\"Cancel\"\n                                    onClick={handleClose}\n                                    disabled={loading}\n                                >\n                                    <IconCancel />\n                                </Button>\n                                <SaveButton\n                                    handleSubmitWithRedirect={\n                                        handleSubmitWithRedirect\n                                    }\n                                    pristine={pristine}\n                                    saving={saving}\n                                    disabled={loading}\n                                    label = 'Save'\n                                />\n                            </DialogActions>\n                        </>\n                    )}\n                />\n            </Dialog>\n        </>\n    );\n}\n\nexport default BorrowerQuickCreateButton;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsEdit.js",["214","215","216"],"import React from 'react';\nimport {FieldGuesser} from \"@api-platform/admin\";\nimport {TextInput, AutocompleteInput, NumberInput, Datagrid, Edit, TabbedForm, FormTab, ReferenceInput, AutocompleteArrayInput, ReferenceArrayInput, ReferenceManyField, SelectArrayInput, DateInput, NullableBooleanInput} from 'react-admin';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport BorrowerFormField from '../borrowers/BorrowerFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton';\nimport Divider from '@material-ui/core/Divider';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '90%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '15%'\n    },\n    nestedGridItem: {\n        width: '95%'\n    },\n    addButton: {\n        width: '5%'\n    },\n    selectItem: {\n        width: '90%'\n    }\n  }));\n\nconst ProjectTitle = ({record}) => {\n    return 'Edit - Project'\n}\n\nexport const ProjectsEdit = props => {\n\n    const classes = useStyles();\n    return(\n        <Edit {...props} actions = {<EditActions />} title = {<ProjectTitle />}>\n        <TabbedForm>\n            <FormTab label={'General Info'}>\n                <>\n                     <div className = {classes.root}>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={6}>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                 <Grid container direction = 'row' alignItems=\"center\" spacing = {0}>\n                                    <Grid item className = {classes.nestedGridItem}>\n                                        <ReferenceInput source='operatingCompany' reference='companies' label='Operating Company' \n                                            filterToQuery={(searchText) => ({ title: searchText })}>\n                                                <AutocompleteInput fullWidth optionText='name'/>\n                                        </ReferenceInput>\n                                    </Grid>\n                                    <Grid item className = {classes.addButton}>\n                                        <ModalCreateButton\n                                            dialogResource=\"companies\"\n                                            dialogFormField=\"companies\"\n                                            dialogTitle=\"Add a Company\"\n                                            dialogMergeFormValues={{ company: props.id }}\n                                            actionTypeCreate\n                                            >\n                                                <CompanyFormField />\n                                        </ModalCreateButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>                           \n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'City' source = 'city' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'State' source = 'state' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Country' source = 'country' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Purchase Land and Building' source = 'purchaseLandAndBuilding' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Tenant Improvement' source = 'tenantImprovement' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Eligible Fees' source = 'eligibleFees' />\n                            </Grid>\n                            <Grid item xs = {12} sm = {12} lg = {12}>\n                                <Divider variant = 'middle' />\n                            </Grid>\n                        </Grid>\n                    </div>\n                </>\n            </FormTab>\n            <FormTab label={'Financing Sources'} path={'Edit_Financing'}>\n\n            </FormTab>\n            <FormTab label={'Project Borrowers'} path = {'EditBorrowers'}>\n                <ReferenceManyField label = 'Borrowers' reference=\"borrowers\" target = 'project'>\n                    <Datagrid>\n                        <FieldGuesser source = 'company'/>\n                        <FieldGuesser source = 'contact'/> \n                    </Datagrid>\n                </ReferenceManyField>\n                <ModalCreateButton\n                    dialogResource=\"borrowers\"\n                    dialogFormField=\"borrowers\"\n                    dialogTitle=\"Add a Borrower\"\n                    dialogMergeFormValues={{ project: props.id }}\n                    dialogRedirect={`/projects/${encodeURIComponent(\n                        props.id\n                    )}/EditBorrowers`}\n                    dialogAddTextLabel=\"Add a Borrower\"\n                    actionTypeEdit\n                    >\n                        <BorrowerFormField />\n                    </ModalCreateButton>\n            </FormTab>\n            <FormTab label = 'Additional Information' source = 'AdditionalInformation'>\n                        <div className = {classes.root}>\n                            <Grid container direction=\"row\" alignItems=\"center\" spacing={6}>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'General Description' source = 'generalDescription' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Financial Description' source = 'financialDescription' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Public Record Report' source = 'publicRecordReport' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <DateInput fullWidth label = 'Period Ending Date' source = 'periodEndingDate' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Cash on Hand' source = 'cashOnHand' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Working Capital' source = 'workingCapital' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Liquidity Ratio' source = 'liquidityRatio' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Liquidity Strength' source = 'liquidityStrength' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Bank Debts' source = 'bankDebts' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Debt of Worth' source = 'debtOfWorth'/>\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Sale Increases' source = 'saleIncreases' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput style = {{width: '100%'}} label = 'SBA Appraisal Approval' source = 'sbaAppraisalApproval' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput  style = {{width: '100%'}} label = 'Environmental Approval' source = 'environmentalApproval' />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </FormTab>\n            </TabbedForm>\n        </Edit>\n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerFormField.js",["217","218"],"import React from 'react';\nimport {\n  ReferenceInput,\n  AutocompleteInput,\n} from 'react-admin';\nimport ContactFormField from '../contacts/ContactFormField';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton'; \nimport { Grid, Typography } from '@material-ui/core';\n\nconst BorrowerFormField = ({ record }) => {\n  return (\n    <>\n      {/* Empty element wrapper to work around default styling */}\n      <Grid container spacing={2}>\n        <Grid container item xs={12} spacing={2}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Select a Contact or Company\n          </Typography>\n        </Grid>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n          <Grid item xs={10} sm={10}>\n            <ReferenceInput\n              source=\"contact\"\n              reference=\"contacts\"\n              label=\"Contact\"\n            //   format={v => {\n            //     return v instanceof Object ? v['@id'] : v;\n            //   }}\n              fullWidth\n            >\n              <AutocompleteInput optionText = {contact => `${contact.firstName}` + ' ' + `${contact.lastName}` }  />\n            </ReferenceInput>\n          </Grid>\n          <Grid item xs={2} sm={2}>\n            <ModalCreateButton\n                dialogResource=\"contacts\"\n                dialogFormField=\"contacts\"\n                dialogTitle=\"Add a Contact\"\n                actionTypeCreate\n                >\n                    <ContactFormField />\n            </ModalCreateButton>\n          </Grid>\n          <Grid item xs={10} sm={10}>\n            <ReferenceInput\n              source=\"company\"\n              reference=\"companies\"\n              label=\"Company\"\n              fullWidth\n            >\n                <AutocompleteInput optionText=\"name\" />\n            </ReferenceInput>\n          </Grid>\n          <Grid item xs={2} sm={2}>\n            <ModalCreateButton\n                dialogResource=\"companies\"\n                dialogFormField=\"companies\"\n                dialogTitle=\"Add a Company\"\n                actionTypeCreate\n                >\n                    <CompanyFormField />\n            </ModalCreateButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport default BorrowerFormField;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/ModalCreateButton.js",["219","220"],"import React, { useState, useCallback } from 'react';\nimport { useFormState } from 'react-final-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QuickCreateButton from './QuickCreateButton';\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\nconst spySubscription = { values: true };\nconst ModalCreateButton = props => {\n  const classes = useStyles();\n  const [version, setVersion] = useState(0);\n  const { values } = useFormState({ subscription: spySubscription });\n  const handleChange = useCallback(\n    data => {\n      return setVersion(version + 1);\n    },\n    [version]\n  );\n  return (\n    <QuickCreateButton onChange={handleChange} {...props} defaultValues={{}}>\n      {props.children}\n    </QuickCreateButton>\n  );\n};\nexport default ModalCreateButton;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/QuickCreateButton.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyFormField.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactFormField.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":11,"column":1,"nodeType":"231","endLine":16,"endColumn":3},{"ruleId":"225","severity":1,"message":"232","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":20},{"ruleId":"225","severity":1,"message":"233","line":4,"column":5,"nodeType":"227","messageId":"228","endLine":4,"endColumn":13},{"ruleId":"225","severity":1,"message":"234","line":11,"column":5,"nodeType":"227","messageId":"228","endLine":11,"endColumn":24},{"ruleId":"221","replacedBy":"235"},{"ruleId":"223","replacedBy":"236"},{"ruleId":"225","severity":1,"message":"237","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":28},{"ruleId":"225","severity":1,"message":"238","line":3,"column":9,"nodeType":"227","messageId":"228","endLine":3,"endColumn":13},{"ruleId":"225","severity":1,"message":"239","line":3,"column":15,"nodeType":"227","messageId":"228","endLine":3,"endColumn":23},{"ruleId":"225","severity":1,"message":"240","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":27},{"ruleId":"225","severity":1,"message":"241","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":26},{"ruleId":"225","severity":1,"message":"239","line":2,"column":52,"nodeType":"227","messageId":"228","endLine":2,"endColumn":60},{"ruleId":"225","severity":1,"message":"242","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":16},{"ruleId":"225","severity":1,"message":"243","line":3,"column":18,"nodeType":"227","messageId":"228","endLine":3,"endColumn":28},{"ruleId":"225","severity":1,"message":"233","line":4,"column":5,"nodeType":"227","messageId":"228","endLine":4,"endColumn":13},{"ruleId":"225","severity":1,"message":"234","line":11,"column":5,"nodeType":"227","messageId":"228","endLine":11,"endColumn":24},{"ruleId":"229","severity":1,"message":"244","line":3,"column":1,"nodeType":"231","endLine":51,"endColumn":3},{"ruleId":"225","severity":1,"message":"245","line":1,"column":8,"nodeType":"227","messageId":"228","endLine":1,"endColumn":13},{"ruleId":"229","severity":1,"message":"246","line":9,"column":1,"nodeType":"231","endLine":16,"endColumn":3},{"ruleId":"225","severity":1,"message":"233","line":4,"column":5,"nodeType":"227","messageId":"228","endLine":4,"endColumn":13},{"ruleId":"225","severity":1,"message":"247","line":7,"column":5,"nodeType":"227","messageId":"228","endLine":7,"endColumn":14},{"ruleId":"225","severity":1,"message":"248","line":13,"column":5,"nodeType":"227","messageId":"228","endLine":13,"endColumn":16},{"ruleId":"225","severity":1,"message":"234","line":14,"column":5,"nodeType":"227","messageId":"228","endLine":14,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":115,"column":99,"nodeType":"251","messageId":"252","endLine":115,"endColumn":100},{"ruleId":"249","severity":1,"message":"250","line":115,"column":105,"nodeType":"251","messageId":"252","endLine":115,"endColumn":106},{"ruleId":"225","severity":1,"message":"253","line":3,"column":105,"nodeType":"227","messageId":"228","endLine":3,"endColumn":127},{"ruleId":"225","severity":1,"message":"254","line":3,"column":129,"nodeType":"227","messageId":"228","endLine":3,"endColumn":148},{"ruleId":"225","severity":1,"message":"255","line":3,"column":170,"nodeType":"227","messageId":"228","endLine":3,"endColumn":186},{"ruleId":"249","severity":1,"message":"250","line":32,"column":82,"nodeType":"251","messageId":"252","endLine":32,"endColumn":83},{"ruleId":"249","severity":1,"message":"250","line":32,"column":88,"nodeType":"251","messageId":"252","endLine":32,"endColumn":89},{"ruleId":"225","severity":1,"message":"256","line":13,"column":9,"nodeType":"227","messageId":"228","endLine":13,"endColumn":16},{"ruleId":"225","severity":1,"message":"257","line":15,"column":11,"nodeType":"227","messageId":"228","endLine":15,"endColumn":17},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'authProvider' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'SaveButton' is defined but never used.","'required' is defined but never used.","'SaveContextProvider' is defined but never used.",["258"],["259"],"'cloneElement' is defined but never used.","'List' is defined but never used.","'Datagrid' is defined but never used.","'DashboardMenuItem' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'Create' is defined but never used.","'SimpleForm' is defined but never used.","Assign object to a variable before exporting as module default","'React' is defined but never used.","Assign array to a variable before exporting as module default","'TextInput' is defined but never used.","'SelectInput' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'AutocompleteArrayInput' is defined but never used.","'ReferenceArrayInput' is defined but never used.","'SelectArrayInput' is defined but never used.","'classes' is assigned a value but never used.","'values' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]