[{"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyCreate.js":"1","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/App.js":"2","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/Contacts.js":"3","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionList.js":"4","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyAppBar.js":"5","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/EditActions.js":"6","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyQuickCreateButton.js":"7","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/index.js":"8","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsList.js":"9","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyList.js":"10","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesCreate.js":"11","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsList.js":"12","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/Theme.js":"13","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MySideMenu.js":"14","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyUserMenu.js":"15","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsCreate.js":"16","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/reportWebVitals.js":"17","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyLayout.js":"18","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsEdit.js":"19","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsCreate.js":"20","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyEdit.js":"21","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesList.js":"22","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesEdit.js":"23","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionCreate.js":"24","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionEdit.js":"25","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/ListActions.js":"26","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsQuickCreateButton.js":"27","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/Company.js":"28","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSources.js":"29","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPosition.js":"30","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/Projects.js":"31","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/DataProvider.js":"32","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/authProvider.js":"33","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/Resources.js":"34","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/Borrower.js":"35","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsEdit.js":"36","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/ModalCreateButton.js":"37","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/QuickCreateButton.js":"38","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyFormField.js":"39","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactFormField.js":"40","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/project_financing_sources/ProjectFinancingSourceFormFields.js":"41","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/SubMenu.js":"42","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/project_financing_sources/ProjectFinancingSources.js":"43","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/CompanyBorrowerFormField.js":"44","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/ContactBorrowerFormField.js":"45","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/ModalEditButton.js":"46","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrower_company_ownership/BorrowerCompanyOwnership.js":"47","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/QuickEditButton.js":"48","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerEditFormField.js":"49","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerFormField.js":"50","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourceFormField.js":"51"},{"size":2383,"mtime":1613673724887,"results":"52","hashOfConfig":"53"},{"size":532,"mtime":1613417081880,"results":"54","hashOfConfig":"53"},{"size":394,"mtime":1613413545435,"results":"55","hashOfConfig":"53"},{"size":585,"mtime":1613672028716,"results":"56","hashOfConfig":"53"},{"size":865,"mtime":1613674007878,"results":"57","hashOfConfig":"53"},{"size":1295,"mtime":1613764771131,"results":"58","hashOfConfig":"53"},{"size":3732,"mtime":1613426777292,"results":"59","hashOfConfig":"53"},{"size":458,"mtime":1612219821972,"results":"60","hashOfConfig":"53"},{"size":806,"mtime":1613672005441,"results":"61","hashOfConfig":"53"},{"size":783,"mtime":1613672339627,"results":"62","hashOfConfig":"53"},{"size":1216,"mtime":1613672969965,"results":"63","hashOfConfig":"53"},{"size":754,"mtime":1613672125515,"results":"64","hashOfConfig":"53"},{"size":1634,"mtime":1613675720658,"results":"65","hashOfConfig":"53"},{"size":2880,"mtime":1613603043315,"results":"66","hashOfConfig":"53"},{"size":468,"mtime":1613410968980,"results":"67","hashOfConfig":"53"},{"size":9085,"mtime":1613672467342,"results":"68","hashOfConfig":"53"},{"size":362,"mtime":1610642975026,"results":"69","hashOfConfig":"53"},{"size":446,"mtime":1613602346266,"results":"70","hashOfConfig":"53"},{"size":2634,"mtime":1613673770836,"results":"71","hashOfConfig":"53"},{"size":2719,"mtime":1613673784521,"results":"72","hashOfConfig":"53"},{"size":2318,"mtime":1613673747324,"results":"73","hashOfConfig":"53"},{"size":628,"mtime":1613672016114,"results":"74","hashOfConfig":"53"},{"size":1231,"mtime":1613673620428,"results":"75","hashOfConfig":"53"},{"size":1216,"mtime":1613672727281,"results":"76","hashOfConfig":"53"},{"size":1210,"mtime":1613673836607,"results":"77","hashOfConfig":"53"},{"size":1417,"mtime":1613674319227,"results":"78","hashOfConfig":"53"},{"size":3957,"mtime":1613074473118,"results":"79","hashOfConfig":"53"},{"size":370,"mtime":1613413552552,"results":"80","hashOfConfig":"53"},{"size":470,"mtime":1613413539216,"results":"81","hashOfConfig":"53"},{"size":424,"mtime":1613413525738,"results":"82","hashOfConfig":"53"},{"size":384,"mtime":1613510857132,"results":"83","hashOfConfig":"53"},{"size":1647,"mtime":1613413807466,"results":"84","hashOfConfig":"53"},{"size":1386,"mtime":1613413807083,"results":"85","hashOfConfig":"53"},{"size":808,"mtime":1613691403031,"results":"86","hashOfConfig":"53"},{"size":172,"mtime":1613416864688,"results":"87","hashOfConfig":"53"},{"size":14649,"mtime":1613777881141,"results":"88","hashOfConfig":"53"},{"size":865,"mtime":1613686859165,"results":"89","hashOfConfig":"53"},{"size":2983,"mtime":1613685987277,"results":"90","hashOfConfig":"53"},{"size":1488,"mtime":1613495977555,"results":"91","hashOfConfig":"53"},{"size":1826,"mtime":1613497071237,"results":"92","hashOfConfig":"53"},{"size":4163,"mtime":1613778235069,"results":"93","hashOfConfig":"53"},{"size":2830,"mtime":1613772279074,"results":"94","hashOfConfig":"53"},{"size":156,"mtime":1613583278632,"results":"95","hashOfConfig":"53"},{"size":1727,"mtime":1613688403412,"results":"96","hashOfConfig":"53"},{"size":1518,"mtime":1613688413366,"results":"97","hashOfConfig":"53"},{"size":958,"mtime":1613692165938,"results":"98","hashOfConfig":"53"},{"size":190,"mtime":1613691332331,"results":"99","hashOfConfig":"53"},{"size":3656,"mtime":1613761651978,"results":"100","hashOfConfig":"53"},{"size":1829,"mtime":1613777640382,"results":"101","hashOfConfig":"53"},{"size":4305,"mtime":1613693098355,"results":"102","hashOfConfig":"53"},{"size":771,"mtime":1613762152917,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1lenir8",{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"106"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyCreate.js",[],["231","232"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/App.js",["233","234"],"import * as React from \"react\";\nimport { HydraAdmin } from \"@api-platform/admin\";\n\nimport authProvider from \"./components/authProvider\";\nimport MyLayout from './layout/MyLayout';\nimport DataProvider from './components/DataProvider.js'\nimport Resources from './components/Resources';\n\nconst entrypoint = process.env.REACT_APP_API_ENTRYPOINT;\n\nexport default () => (\n    <HydraAdmin entrypoint={entrypoint} layout={MyLayout}  dataProvider={DataProvider} // authProvider = {authProvider} \n    >\n        {Resources}\n    </HydraAdmin>\n);","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/Contacts.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionList.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyAppBar.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/EditActions.js",["235"],"import React from 'react';\nimport { SaveButton, TopToolbar, ListButton } from 'react-admin';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '90%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    title: {\n        fontSize: '1.5rem',\n        marginLeft: '-1rem'\n    }\n  }));\n\n\nexport const EditActions = ({ basePath, data, title }) => {\n    const classes = useStyles()\n    return(\n        <div className = {classes.root}>\n            <Grid container direction=\"row\"  alignItems=\"center\" spacing={6}>\n                <Grid item xs = {8} sm = {4} lg = {6}>\n                    <Typography variant = 'h4' color = 'secondary' className = {classes.title}>\n                        {title}\n                    </Typography>\n                </Grid>\n                <Grid item xs = {4} sm = {8} lg = {6}>\n                    <TopToolbar>\n                        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\n                    </TopToolbar>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyQuickCreateButton.js",["236","237"],"import React, { useState } from 'react';\nimport { useForm } from 'react-final-form';\nimport {\n    required,\n    Button,\n    SaveButton,\n    TextInput,\n    useCreate,\n    useNotify,\n    FormWithRedirect,\n    SaveContextProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nfunction CompanyQuickCreateButton({onChange}) {\n    const [open, setOpen] = useState(false);\n    const [create, { loading }] = useCreate('companies');\n    const notify = useNotify();\n    const createForm = useForm();\n\n    const handleClick = () => {\n        setOpen(true)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    };\n    const handleSubmit = async values => {\n        create(\n            {payload: {data : values} },\n            {\n                onSuccess: ({ data }) => {\n                    setOpen(false);\n                    createForm.change('id', data.id);\n                    onChange();\n                },\n                onFailure: ({ error }) => {\n                    notify(error.message, 'error');\n                }\n            }\n        );\n    };\n\n    return (\n        <>\n            <Button onClick = {handleClick} label = ''>\n                <IconContentAdd />\n            </Button>\n            <Dialog fullWidth open = {open} onClose = {handleClose} aria-label = 'Create post'>\n                <DialogTitle>Create a New Company</DialogTitle>\n                <FormWithRedirect resource='companies' save={handleSubmit}\n                    render={({\n                        handleSubmitWithRedirect,\n                        pristine,\n                        saving\n                    }) => (\n                        <>\n                           <DialogContent>\n                                <TextInput fullWidth  label = 'Company Name' source = 'name' id = 'companyName2' />\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' id = 'streetAddress2' />\n                                <TextInput fullWidth label = 'City' source = 'city' id = 'city2' />\n                                <TextInput fullWidth label = 'State' source = 'state' id = 'state2'/>\n                                <TextInput fullWidth label = 'Country' source = 'country' id = 'country2'/>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' id = 'postalCode2'/>\n                           </DialogContent>\n                           <DialogActions>\n                                <Button\n                                    label=\"Cancel\"\n                                    onClick={handleClose}\n                                    disabled={loading}\n                                >\n                                    <IconCancel />\n                                </Button>\n                                <SaveButton\n                                    handleSubmitWithRedirect={\n                                        handleSubmitWithRedirect\n                                    }\n                                    pristine={pristine}\n                                    saving={saving}\n                                    disabled={loading}\n                                    label = 'Save'\n                                />\n                            </DialogActions>\n                        </>\n                    )}\n                />\n            </Dialog>\n        </>\n    );\n}\n\nexport default CompanyQuickCreateButton;",["238","239"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/index.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsList.js",["240"],"import React, {cloneElement} from 'react';\nimport {ListGuesser} from \"@api-platform/admin\";\nimport {ListActions} from '../actions/ListActions';\nimport {\n    TextField,\n    EmailField,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    contact: {\n       fontSize: '1.25em'\n    }\n\n});\n\nexport const ContactsList = props => {\n    const classes = useStyles();\n    return (\n         <ListGuesser  className = {classes.headers} actions = {<ListActions title = 'Contacts'/>}  {...props}>\n             <TextField className = {classes.contact} source = 'firstName' />\n             <TextField className = {classes.contact} source = 'lastName' />\n             <EmailField className = {classes.contact} source = 'email' />\n         </ListGuesser>\n    )\n}\n\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyList.js",["241","242"],"import React from 'react';\nimport {ListGuesser} from '@api-platform/admin';\nimport {List, Datagrid, TextField} from 'react-admin';\nimport {ListActions} from '../actions/ListActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    contact: {\n       fontSize: '1.25em'\n    },\n\n});\n\n\nexport const CompanyList = props => {\n    const classes = useStyles();\n    return (\n         <ListGuesser  className = {classes.headers} actions = {<ListActions title = 'Companies' />} {...props}>\n                <TextField className = {classes.contact} source = 'name' />\n                <TextField className = {classes.contact} source = 'city' />\n                <TextField className = {classes.contact} source = \"state\" />\n         </ListGuesser>\n    )\n}\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesCreate.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsList.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/Theme.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MySideMenu.js",["243"],"import React, {useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery } from '@material-ui/core';\nimport { DashboardMenuItem,  MenuItemLink } from 'react-admin';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport SubMenu from './SubMenu';\n\nconst MySideMenu = ({ onMenuClick, toggleSidebar, logout, dense = false }) => {\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n    const open = useSelector(state => state.admin.ui.sidebarOpen);\n    const [state, setState] = useState({\n        menuConfigurations: true,\n    });\n    const handleToggle = (menu) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div>\n            <MenuItemLink to = '/home' primaryText = 'Home' \n                          leftIcon = {<DashboardIcon onClick = {onMenuClick} dense={dense}/>}\n                          sidebarIsOpen = {open} />\n            <MenuItemLink to = '/projects' primaryText = 'Projects' \n                          leftIcon = {<AssignmentIcon onClick = {onMenuClick} dense={dense} />}\n                          sidebarIsOpen = {open}/> \n            <MenuItemLink to = '/contacts' primaryText = 'Contacts' \n                          leftIcon = {<ContactsIcon onClick = {onMenuClick} dense={dense}/>}\n                          sidebarIsOpen = {open} />\n             <MenuItemLink to = '/companies' primaryText = 'Companies' \n                            leftIcon = {<BusinessIcon onClick = {onMenuClick} dense={dense}/>}\n                            sidebarIsOpen = {open}/>\n            <SubMenu                 \n                handleToggle={() => handleToggle('menuConfigurations')}\n                isOpen={state.menuConfigurations}\n                sidebarIsOpen={open}\n                name=\"Configurations\"\n                icon={<ChevronRightIcon/>}\n                dense={dense}>\n                <MenuItemLink to = '/financing_sources' primaryText = 'Financing Sources' \n                            leftIcon = {<MoneyIcon onClick = {onMenuClick} />}\n                            sidebarIsOpen = {open} dense={dense}/>\n                \n                <MenuItemLink to = '/lien_positions' primaryText = 'Lien Positions' \n                            leftIcon = {<FormatListNumberedIcon onClick = {onMenuClick} /> }\n                            sidebarIsOpen = {open} dense={dense}/>\n            </SubMenu>\n            \n            {isXSmall && logout}\n        </div>\n    );\n};\n\nexport default MySideMenu;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyUserMenu.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsCreate.js",["244"],"import React from 'react';\nimport {TextInput, AutocompleteInput, NumberInput, Datagrid, ReferenceInput, DateInput, BooleanInput, required, \n    NullableBooleanInput, Create, TabbedForm, FormTab} from 'react-admin';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '90%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '15%'\n    },\n    nestedGridItem: {\n        width: '95%'\n    },\n    addButton: {\n        width: '5%'\n    },\n    selectItem: {\n        width: '90%'\n    }\n  }));\n\n\n\nexport const ProjectsCreate = props => {\n    const classes = useStyles();\n    return(\n        <Create  actions = {<EditActions title = 'Create a new Project'/>} {...props}>\n            <TabbedForm>\n                <FormTab label = 'General Info'>\n                    <>\n                    <div className = {classes.root}>\n                        <Grid container direction=\"row\" alignItems=\"center\" spacing={6}>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                 <Grid container direction = 'row' alignItems=\"center\" spacing = {0}>\n                                    <Grid item className = {classes.nestedGridItem}>\n                                        <ReferenceInput source='operatingCompany' reference='companies' label='Operating Company' \n                                            filterToQuery={(searchText) => ({ title: searchText })} validate={[required()]}>\n                                                <AutocompleteInput fullWidth optionText='name'/>\n                                        </ReferenceInput>\n                                    </Grid>\n                                    <Grid item className = {classes.addButton}>\n                                    <ModalCreateButton\n                                        dialogResource=\"companies\"\n                                        dialogFormField=\"companies\"\n                                        dialogTitle=\"Add a Company\"\n                                        actionTypeCreate\n                                        >\n                                            <CompanyFormField />\n                                    </ModalCreateButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>                           \n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'City' source = 'city' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'State' source = 'state' validate={[required()]}/>\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Country' source = 'country' validate={[required()]}/>\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Purchase Land and Building' source = 'purchaseLandAndBuilding' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Tenant Improvement' source = 'tenantImprovement' validate={[required()]} />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Eligible Fees' source = 'eligibleFees' validate={[required()]}/>\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <BooleanInput fullWidth label = 'Payment Penalty' source = 'paymentPenalty' defaultValue = {true}/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    </>  \n                </FormTab>\n                <FormTab label = 'Additional Information' path = 'Additional_Information'>\n                    <>\n                        <div className = {classes.root}>\n                            <Grid container direction=\"row\" alignItems=\"center\" spacing={6}>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'General Description' source = 'generalDescription' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Financial Description' source = 'financialDescription' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Public Record Report' source = 'publicRecordReport' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <DateInput fullWidth label = 'Period Ending Date' source = 'periodEndingDate' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Cash on Hand' source = 'cashOnHand' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Working Capital' source = 'workingCapital' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Liquidity Ratio' source = 'liquidityRatio' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Liquidity Strength' source = 'liquidityStrength' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Bank Debts' source = 'bankDebts' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Debt of Worth' source = 'debtOfWorth'/>\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Sale Increases' source = 'saleIncreases' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput style = {{width: '100%'}} label = 'SBA Appraisal Approval' source = 'sbaAppraisalApproval' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput  style = {{width: '100%'}} label = 'Environmental Approval' source = 'environmentalApproval' />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </>\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/reportWebVitals.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/MyLayout.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsEdit.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsCreate.js",["245","246"],"import React from 'react';\nimport {CreateGuesser} from \"@api-platform/admin\";\nimport { Create, SimpleForm, TextInput} from 'react-admin';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '80%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '15%'\n    }\n  }));\n\nconst ContactsTitle = ({record}) => {\n    return 'Create a new Contact'\n}\n\nexport const ContactsCreate = props => {\n    const classes = useStyles();\n    return(\n        <CreateGuesser  actions = {<EditActions title = {<ContactsTitle />}/>} {...props}>\n                <div className = {classes.root}>\n                    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth  label = 'First Name' source = 'firstName' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth  label = 'Last Name' source = 'lastName' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth  label = 'Email Address' source = 'email' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'Street Address' source = 'streetAddress' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'City' source = 'city' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'State' source = 'state' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'Country' source = 'country' />\n                        </Grid>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                            <TextInput fullWidth label = 'Postal Code' source = 'postalCode' />\n                        </Grid>\n                    </Grid>\n                </div>\n        </CreateGuesser>\n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyEdit.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesList.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourcesEdit.js",["247"],"import React from 'react';\nimport {EditGuesser} from \"@api-platform/admin\";\nimport { TextInput} from 'react-admin';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '80%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '10%'\n    }\n  }));\n\nconst FinancingSourceTitle = ({record}) => {\n    console.log(record.name);\n    return 'Edit - ' + record.name\n}\nexport const FinancingSourcesEdit = props => {\n    const classes = useStyles();\n    return (\n            <EditGuesser actions = {<EditActions title = {'Edit - Financing Source'} />} {...props}>\n                <div className = {classes.root}>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={3}>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {6}>\n                            <TextInput fullWidth  label = 'Name' source = 'name' />\n                        </Grid>\n                    </Grid>\n                 </div>\n            </EditGuesser>  \n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionCreate.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPositionEdit.js",["248"],"import React from 'react';\nimport {EditGuesser} from \"@api-platform/admin\";\nimport {NumberInput} from 'react-admin';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '80%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '5%'\n    }\n  }));\n\nconst LienPositionTitle = ({record}) => {\n    return 'Edit - ' + record.position;\n}\nexport const LienPositionEdit = props => {\n    const classes = useStyles();\n    return (\n            <EditGuesser  actions = {<EditActions title = {'Edit - Lien Positon'}/>} {...props}>\n                <div className = {classes.root}>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={3}>\n                        <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {6}>\n                            <NumberInput fullWidth  label = 'Lien Position' source = 'position' />\n                        </Grid>\n                    </Grid>\n                 </div>\n            </EditGuesser>  \n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/actions/ListActions.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactsQuickCreateButton.js",["249","250"],"import React, { useState } from 'react';\nimport { useForm } from 'react-final-form';\nimport {\n    required,\n    Button,\n    SaveButton,\n    TextInput,\n    useCreate,\n    useNotify,\n    FormWithRedirect,\n    SaveContextProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nfunction CompanyQuickCreateButton({onChange}) {\n    const [open, setOpen] = useState(false);\n    const [create, { loading }] = useCreate('contacts');\n    const notify = useNotify();\n    const createForm = useForm();\n\n    const handleClick = () => {\n        setOpen(true)\n    };\n    const handleClose = () => {\n        setOpen(false)\n    };\n    const handleSubmit = async values => {\n        create(\n            {payload: {data : values} },\n            {\n                onSuccess: ({ data }) => {\n                    setOpen(false);\n                    createForm.change('id', data.id);\n                    onChange();\n                },\n                onFailure: ({ error }) => {\n                    notify(error.message, 'error');\n                }\n            }\n        );\n    };\n\n    return (\n        <>\n            <Button onClick = {handleClick} label = ''>\n                <IconContentAdd />\n            </Button>\n            <Dialog fullWidth open = {open} onClose = {handleClose} aria-label = 'Create post'>\n                <DialogTitle>Create a New Contact</DialogTitle>\n                <FormWithRedirect resource='contacts' save={handleSubmit}\n                    render={({\n                        handleSubmitWithRedirect,\n                        pristine,\n                        saving\n                    }) => (\n                        <>\n                           <DialogContent>\n                                <TextInput fullWidth  label = 'First Name' source = 'firstName' id = 'firstName2' />\n                                <TextInput fullWidth  label = 'Last Name' source = 'lastName' id = 'lastName2' />\n                                <TextInput fullWidth  label = 'Email Address' source = 'email' id = 'email2' />\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' id = 'streetAddress3' />\n                                <TextInput fullWidth label = 'City' source = 'city' id = 'city3' />\n                                <TextInput fullWidth label = 'State' source = 'state' id = 'state3'/>\n                                <TextInput fullWidth label = 'Country' source = 'country' id = 'country3'/>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' id = 'postalCode3'/>\n                           </DialogContent>\n                           <DialogActions>\n                                <Button\n                                    label=\"Cancel\"\n                                    onClick={handleClose}\n                                    disabled={loading}\n                                >\n                                    <IconCancel />\n                                </Button>\n                                <SaveButton\n                                    handleSubmitWithRedirect={\n                                        handleSubmitWithRedirect\n                                    }\n                                    pristine={pristine}\n                                    saving={saving}\n                                    disabled={loading}\n                                    label = 'Save'\n                                />\n                            </DialogActions>\n                        </>\n                    )}\n                />\n            </Dialog>\n        </>\n    );\n}\n\nexport default CompanyQuickCreateButton;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/Company.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSources.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/lien_positions/LienPosition.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/Projects.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/DataProvider.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/authProvider.js",["251"],"import jwtDecode from \"jwt-decode\";\n\nexport default {\n  login: ({ username, password }) => {\n    const request = new Request(\n      `${process.env.REACT_APP_API_ENTRYPOINT}/authentication_token`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email: username, password }),\n        headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      }\n    );\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ token }) => {\n        localStorage.setItem(\"token\", token);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem(\"token\");\n    return Promise.resolve();\n  },\n  checkAuth: () => {\n    try {\n      if (\n        !localStorage.getItem(\"token\") ||\n        new Date().getTime() / 1000 >\n          jwtDecode(localStorage.getItem(\"token\"))?.exp\n      ) {\n        return Promise.reject();\n      }\n      return Promise.resolve();\n    } catch (e) {\n      // override possible jwtDecode error\n      return Promise.reject();\n    }\n  },\n  checkError: (err) => {\n    if ([401, 403].includes(err?.status || err?.response?.status)) {\n      localStorage.removeItem(\"token\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  getPermissions: () => Promise.resolve(),\n};","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/Resources.js",["252","253"],"import React from 'react';\nimport companyResource from './companies/Company';\nimport contactResource from './contacts/Contacts';\nimport financingSourceResource from './financing_sources/FinancingSources';\nimport lienPositionResource from './lien_positions/LienPosition';\nimport projectResource from './projects/Projects';\nimport borrowerResource from './borrowers/Borrower';\nimport projectFinancingSourceResource from './project_financing_sources/ProjectFinancingSources';\nimport borrowerCompanyOwnershipResource from './borrower_company_ownership/BorrowerCompanyOwnership';\nexport default [\n    companyResource,\n    contactResource,\n    financingSourceResource,\n    lienPositionResource,\n    projectResource,\n    borrowerResource,\n    projectFinancingSourceResource,\n    borrowerCompanyOwnershipResource,\n];","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/Borrower.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/projects/ProjectsEdit.js",["254"],"import React from 'react';\nimport {FieldGuesser} from \"@api-platform/admin\";\nimport {TextInput, AutocompleteInput, NumberInput, Datagrid, Edit, TabbedForm, \n        FormTab, ReferenceInput, ReferenceManyField, DateInput, TextField,\n        NullableBooleanInput} from 'react-admin';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport BorrowerEditFormField from '../borrowers/BorrowerEditFormField';\nimport CompanyBorrowerFormField from '../borrowers/CompanyBorrowerFormField';\nimport ContactBorrowerFormField from '../borrowers/ContactBorrowerFormField';\nimport ProjectFinancingSourceFormFields from '../project_financing_sources/ProjectFinancingSourceFormFields';\nimport ModalCreateButton from '../helpers/ModalCreateButton';\nimport Divider from '@material-ui/core/Divider';\nimport {EditActions} from '../actions/EditActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ModalEditButton from '../helpers/ModalEditButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '90%',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    gridItem: {\n        width: '15%'\n    },\n    nestedGridItem: {\n        width: '95%'\n    },\n    addButton: {\n        width: '5%'\n    },\n    selectItem: {\n        width: '90%'\n    }\n  }));\n\nconst ProjectTitle = ({record}) => {\n    return 'Edit - Project'\n}\n\nexport const ProjectsEdit = props => {\n\n    const classes = useStyles();\n    return(\n        <Edit {...props} actions = {<EditActions title = {<ProjectTitle />} />} >\n        <TabbedForm>\n            <FormTab label={'General Info'}>\n                <>\n                     <div className = {classes.root}>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={6}>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                 <Grid container direction = 'row' alignItems=\"center\" spacing = {0}>\n                                    <Grid item className = {classes.nestedGridItem}>\n                                        <ReferenceInput source='operatingCompany' reference='companies' label='Operating Company' \n                                            filterToQuery={(searchText) => ({ title: searchText })}>\n                                                <AutocompleteInput fullWidth optionText='name'/>\n                                        </ReferenceInput>\n                                    </Grid>\n                                    <Grid item className = {classes.addButton}>\n                                        <ModalCreateButton\n                                            dialogResource=\"companies\"\n                                            dialogFormField=\"companies\"\n                                            dialogTitle=\"Add a Company\"\n                                            actionTypeCreate\n                                            >\n                                                <CompanyFormField />\n                                        </ModalCreateButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>                           \n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Street Address' source = 'streetAddress' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'City' source = 'city' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'State' source = 'state' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Country' source = 'country' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Postal Code' source = 'postalCode' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Purchase Land and Building' source = 'purchaseLandAndBuilding' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Tenant Improvement' source = 'tenantImprovement' />\n                            </Grid>\n                            <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                <TextInput fullWidth label = 'Eligible Fees' source = 'eligibleFees' />\n                            </Grid>\n                            <Grid item xs = {12} sm = {12} lg = {12}>\n                                <Divider variant = 'middle' />\n                            </Grid>\n                        </Grid>\n                    </div>\n                </>\n            </FormTab>\n            <FormTab label={'Financing Sources'} path={'edit_financing'}>\n            <ReferenceManyField label = 'Project Financing Sources' reference=\"project_financing_sources\" target = 'project'>\n                    <Datagrid>\n                        <FieldGuesser source = 'project'/>\n                        <FieldGuesser source = 'financingSource'/>\n                        <FieldGuesser source = 'amount'/>\n                        <FieldGuesser source = 'principalAndInterestPayment'/>\n                        <FieldGuesser source = 'rate'/>\n                        <FieldGuesser source = 'percentage'/>\n                        <FieldGuesser source = 'lienPosition'/>\n                        <ModalEditButton\n                                dialogResource=\"project_financing_sources\"\n                                dialogFormField=\"project_financing_sources\"\n                                dialogTitle=\"Edit Borrower\"\n                                dialogMergeFormValues={{ project: props.id }}\n                                dialogRedirect={`/projects/${encodeURIComponent(\n                                props.id\n                                )}/edit_financing`}\n                                dialogAddTextLabel=\"Edit\"\n                                actionTypeEdit\n                            >\n                                <ProjectFinancingSourceFormFields projectId = {props.id}/>\n                            </ModalEditButton>\n                    </Datagrid>\n                </ReferenceManyField>\n                <ModalCreateButton\n                    dialogResource=\"project_financing_sources\"\n                    dialogFormField=\"project_financing_sources\"\n                    dialogTitle=\"Add a Financing Source\"\n                    dialogMergeFormValues={{ project: props.id }}\n                    dialogRedirect={`/projects/${encodeURIComponent(\n                        props.id\n                    )}/edit_financing`}\n                    dialogAddTextLabel=\"Add a Financing Source\"\n                    actionTypeEdit\n                    >\n                        <ProjectFinancingSourceFormFields  projectId = {props.id} />\n                    </ModalCreateButton>\n            </FormTab>\n            <FormTab label={'Project Borrowers'} path = {'edit_borrowers'}>\n                <ReferenceManyField label = 'Project Borrowers' reference=\"borrowers\" target = 'project' {...props}>\n                    <Datagrid>\n                        <FieldGuesser source = 'company'/>\n                        <FieldGuesser source = 'contact'/> \n                        <FieldGuesser source = 'borrowerCompanyOwnership' />\n                        <ModalEditButton\n                                dialogResource=\"borrowers\"\n                                dialogFormField=\"borrowers\"\n                                dialogTitle=\"Edit Borrower\"\n                                dialogMergeFormValues={{ project: props.id }}\n                                dialogRedirect={`/projects/${encodeURIComponent(\n                                props.id\n                                )}/edit_borrowers`}\n                                dialogAddTextLabel=\"Edit\"\n                                actionTypeEdit\n                            >\n                                <BorrowerEditFormField />\n                            </ModalEditButton>\n                    </Datagrid>\n                </ReferenceManyField>\n                <div style = {{width : '40%'}}>\n                    <Grid container direction = 'col'>\n                        <Grid item xs = {6}>\n                            <ModalCreateButton\n                                dialogResource=\"borrowers\"\n                                dialogFormField=\"borrowers\"\n                                dialogTitle=\"Add a Company Borrower\"\n                                dialogMergeFormValues={{ project: props.id }}\n                                dialogRedirect={`/projects/${encodeURIComponent(\n                                    props.id\n                                )}/edit_borrowers`}\n                                dialogAddTextLabel=\"Add a Company Borrower\"\n                                actionTypeEdit\n                                >\n                                    <CompanyBorrowerFormField />\n                                </ModalCreateButton>\n                        </Grid>\n                        <Grid item xs = {6}>\n                            <ModalCreateButton\n                                dialogResource=\"borrowers\"\n                                dialogFormField=\"borrowers\"\n                                dialogTitle=\"Add a Contact Borrower\"\n                                dialogMergeFormValues={{ project: props.id }}\n                                dialogRedirect={`/projects/${encodeURIComponent(\n                                    props.id\n                                )}/edit_borrowers`}\n                                dialogAddTextLabel=\"Add a Contact Borrower\"\n                                actionTypeEdit\n                                >\n                                    <ContactBorrowerFormField />\n                                </ModalCreateButton>\n                        </Grid>\n                    </Grid>\n                </div>\n                \n                    \n            </FormTab>\n            <FormTab label = 'Additional Information' source = 'AdditionalInformation'>\n                        <div className = {classes.root}>\n                            <Grid container direction=\"row\" alignItems=\"center\" spacing={6}>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'General Description' source = 'generalDescription' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Financial Description' source = 'financialDescription' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Public Record Report' source = 'publicRecordReport' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <DateInput fullWidth label = 'Period Ending Date' source = 'periodEndingDate' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Cash on Hand' source = 'cashOnHand' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Working Capital' source = 'workingCapital' />\n                                </Grid> \n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Liquidity Ratio' source = 'liquidityRatio' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Liquidity Strength' source = 'liquidityStrength' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Bank Debts' source = 'bankDebts' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NumberInput fullWidth label = 'Debt of Worth' source = 'debtOfWorth'/>\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <TextInput multiline fullWidth label = 'Sale Increases' source = 'saleIncreases' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput style = {{width: '100%'}} label = 'SBA Appraisal Approval' source = 'sbaAppraisalApproval' />\n                                </Grid>\n                                <Grid item className = {classes.gridItem} xs = {12} sm = {6} lg = {4}>\n                                    <NullableBooleanInput  style = {{width: '100%'}} label = 'Environmental Approval' source = 'environmentalApproval' />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </FormTab>\n            </TabbedForm>\n        </Edit>\n    )\n}","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/ModalCreateButton.js",["255","256","257"],"import React, { useState, useCallback } from 'react';\nimport { useFormState } from 'react-final-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QuickCreateButton from './QuickCreateButton';\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\nconst spySubscription = { values: true };\nconst ModalCreateButton = props => {\n  const {disabled} = props;\n  const classes = useStyles();\n  const [version, setVersion] = useState(0);\n  const { values } = useFormState({ subscription: spySubscription });\n  const handleChange = useCallback(\n    data => {\n      return setVersion(version + 1);\n    },\n    [version]\n  );\n  \n    return (\n      <QuickCreateButton onChange={handleChange} {...props} defaultValues={{}}>\n        {props.children}\n      </QuickCreateButton>\n    );\n\n};\nexport default ModalCreateButton;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/QuickCreateButton.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/companies/CompanyFormField.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/contacts/ContactFormField.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/project_financing_sources/ProjectFinancingSourceFormFields.js",["258","259","260","261","262","263"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/layout/SubMenu.js",["264"],"import * as React from 'react';\nimport {  Fragment, ReactElement } from 'react';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        marginLeft: '0.2rem',\n        backgroundColor: 'rgba(167,173,186,0.4)',\n        borderBottom: '1px solid rgba(80,80,80,0.2)',\n        width: '95.2%',\n        fontWeight: '1.1rem'\n    },\n    headerClosed: {\n        marginLeft: '0.2rem',\n        backgroundColor: 'rgba(167,173,186,0.4)',\n        borderBottom: '1px solid rgba(80,80,80,0.2)',\n        width: '80%'\n    },\n    headerText: {\n        marginLeft: '-0.9rem',\n    },\n    sidebarIsOpen: {\n        '& a': {\n            paddingLeft: theme.spacing(3),\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n        },\n    },\n}));\n\n\nconst SubMenu= ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    children,\n    dense,\n}) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    const headerClass = sidebarIsOpen ? classes.header : classes.headerClosed\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle} className = {headerClass}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\" className = {classes.headerText}>\n                {name}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/project_financing_sources/ProjectFinancingSources.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/CompanyBorrowerFormField.js",["265","266","267"],"import React, {useState, useRef} from 'react';\nimport {\n  ReferenceInput,\n  AutocompleteInput\n} from 'react-admin';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton'; \nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    width: '8rem',\n    height: '8rem',\n    '& svg': {\n      fontSize: '4.5rem'\n    },\n    marginBottom: '2rem'\n  }\n}));\n\nconst CompanyBorrowerFormField = ({ record }) => {\n\n  return (\n    <>\n      <Grid  container direction = 'row' justify = 'center' alignItems = 'center' spacing={3}>\n        <Grid item xs = {12}>\n          <Typography variant = 'subtitle1' color = 'textSecondary' style = {{marginBottom: '1rem'}}>\n              Create a new company borrower\n         </Typography>\n        </Grid>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n        <Grid item xs={10} sm={10}>\n            <ReferenceInput\n                source=\"company\"\n                reference=\"companies\"\n                label=\"Company\"\n                fullWidth\n            >\n                <AutocompleteInput optionText=\"name\" />\n            </ReferenceInput>\n            </Grid>\n            <Grid item xs={2} sm={2}>\n            <ModalCreateButton\n                dialogResource=\"companies\"\n                dialogFormField=\"companies\"\n                dialogTitle=\"Add a Company\"\n                actionTypeCreate\n                >\n                    <CompanyFormField />\n            </ModalCreateButton>\n            </Grid>\n        </Grid>\n    </Grid>\n    </>\n  )\n}\nexport default CompanyBorrowerFormField;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/ContactBorrowerFormField.js",["268","269"],"import React from 'react';\nimport {\n  ReferenceInput,\n  AutocompleteInput\n} from 'react-admin';\nimport ContactFormField from '../contacts/ContactFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton'; \nimport { Grid, Typography } from '@material-ui/core';\n\nconst ContactBorrowerFormField = ({ record }) => {\n  return (\n    <>\n      <Grid  container direction = 'row' justify = 'center' alignItems = 'center' spacing={3}>\n        <Grid item xs = {12}>\n          <Typography variant = 'subtitle1' color = 'textSecondary' style = {{marginBottom: '1rem'}}>\n              Create a new contact borrower\n         </Typography>\n        </Grid>\n        \n        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n        <Grid item xs={10} sm={10}>\n            <ReferenceInput\n              source=\"contact\"\n              reference=\"contacts\"\n              label=\"Contact\"\n              fullWidth\n            >\n              <AutocompleteInput  optionText = {contact => `${contact.firstName}` + ' ' + `${contact.lastName}` }  />\n            </ReferenceInput>\n          </Grid>\n          <Grid item xs={2} sm={2}>\n            <ModalCreateButton\n                dialogResource=\"contacts\"\n                dialogFormField=\"contacts\"\n                dialogTitle=\"Add a Contact\"\n                actionTypeCreate\n            >\n                    <ContactFormField />\n            </ModalCreateButton>\n          </Grid>\n        </Grid>\n    </Grid>\n    </>\n  )\n}\nexport default ContactBorrowerFormField;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/ModalEditButton.js",["270","271","272"],"import React, { useState, useCallback, Children } from 'react';\nimport { useFormState } from 'react-final-form';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport QuickEditButton from './QuickEditButton';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nconst spySubscription = { values: true };\n\nconst ModalEditButton = props => {\n  const classes = useStyles();\n  const [version, setVersion] = useState(0);\n  const { values } = useFormState({ subscription: spySubscription });\n  const handleChange = useCallback(\n    data => {\n      return setVersion(version + 1);\n    },\n    [version]\n  );\n\n  return (\n    <QuickEditButton\n      onChange={handleChange}\n      {...props}\n      defaultValues={props.record}\n    >\n      {React.Children.map(props.children, child =>\n        React.cloneElement(child, { record: props.record })\n      )}\n    </QuickEditButton>\n  );\n};\n\nexport default ModalEditButton;\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrower_company_ownership/BorrowerCompanyOwnership.js",[],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/helpers/QuickEditButton.js",["273","274","275","276","277","278","279"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-final-form';\nimport {\n  Button,\n  SaveButton,\n  useNotify,\n  FormWithRedirect,\n  useRefresh,\n  useRedirect,\n  useMutation,\n  FormDataConsumer,\n  TabbedForm, \n  FormTab,\n} from 'react-admin';\nimport IconContentEdit from '@material-ui/icons/Edit';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { FormControlLabel, Checkbox, Typography } from '@material-ui/core';\n\nfunction QuickEditButton({\n  onChange,\n  dialogResource,\n  children,\n  dialogFormField,\n  dialogTitle,\n  dialogCancelLabel,\n  dialogMergeFormValues,\n  dialogRedirect,\n  dialogAddTextLabel,\n  defaultValues,\n  isShowEditButton = false\n}) {\n  const [showDialog, setShowDialog] = useState(false);\n  const notify = useNotify();\n  const refresh = useRefresh();\n  const redirect = useRedirect();\n  const form = useForm();\n  const [mutation, { loading }] = useMutation();\n  const isClientContractsResource = dialogResource === 'client_contracts';\n  const [checked, setChecked] = useState(!isClientContractsResource);\n  const checkedRef = useRef(false);\n\n  useEffect(() => {\n    if (isShowEditButton) {\n      checkedRef.current = isShowEditButton;\n      setChecked(isShowEditButton);\n    }\n  }, [isShowEditButton]);\n\n  const handleChange = () => {\n    checkedRef.current = !checked;\n    setChecked(!checked);\n  };\n\n  const handleClick = () => {\n    setShowDialog(true);\n  };\n\n  const handleCloseClick = () => {\n    setShowDialog(false);\n  };\n\n  const handleSubmit = async values => {\n    mutation(\n      {\n        type: 'update',\n        resource: dialogResource,\n        payload: {\n          id: values.id,\n          data: { ...values, ...dialogMergeFormValues }\n        }\n      },\n      {\n        onSuccess: ({ data }) => {\n          if (dialogRedirect) {\n            redirect(dialogRedirect);\n            refresh();\n          } else {\n            form.change(dialogFormField, values.id);\n          }\n        },\n        onFailure: error => notify(`Error: ${error.message}`, 'warning')\n      }\n    );\n  };\n\n  // let returnField;\n  // if (children.length == 1) {\n  //   returnField = children[0]\n  // }\n  return (\n    <>\n      <Button onClick={handleClick} label={dialogAddTextLabel}>\n        <IconContentEdit />\n      </Button>\n      <Dialog\n        fullWidth\n        open={showDialog}\n        onClose={handleCloseClick}\n        aria-label={dialogTitle}\n      >\n        <DialogTitle>{dialogTitle}</DialogTitle>\n\n        <FormWithRedirect\n          initialValues={defaultValues}\n          resource={dialogResource}\n          save={handleSubmit}\n          render={({ handleSubmitWithRedirect, pristine, saving }) => (\n            <>\n              <DialogContent> \n                          {children}\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  label={dialogCancelLabel || 'Cancel'}\n                  onClick={handleCloseClick}\n                  disabled={loading}\n                >\n                  <IconCancel />\n                </Button>\n                <SaveButton\n                  handleSubmitWithRedirect={handleSubmitWithRedirect}\n                  pristine={pristine}\n                  saving={saving}\n                  disabled={loading || !checked}\n                />\n              </DialogActions>\n            </>\n          )}\n        />\n      </Dialog>\n    </>\n  );\n}\n\nexport default QuickEditButton;\n","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerEditFormField.js",["280","281","282","283","284","285","286"],"import React, {useState, useRef} from 'react';\nimport {\n  ReferenceInput,\n  AutocompleteInput,\n  ReferenceManyField,\n  Datagrid,\n  FormDataConsumer, \n  TabbedForm,\n  FormTab,\n} from 'react-admin';\n\nimport { Grid } from '@material-ui/core';\nimport FieldGuesser from '@api-platform/admin/lib/FieldGuesser';\n\n\n\nconst ContactOptions = (props) => {\n  return (\n    <>\n        <Grid  container direction = 'row' spacing={3}>\n          <Grid item xs={10} sm={10}>\n            <ReferenceInput\n              source=\"contact\"\n              reference=\"contacts\"\n              label=\"Contact\"\n              fullWidth\n            >\n              <AutocompleteInput  optionText = {contact => `${contact.firstName}` + ' ' + `${contact.lastName}` }  />\n            </ReferenceInput>\n          </Grid>\n        </Grid>\n    </>\n  )\n}\n\nconst CompanyOptions = (props) => {\n  return(\n    <>\n      <Grid  container direction = 'row' spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <ReferenceInput\n              source=\"company\"\n              reference=\"companies\"\n              label=\"Company\"\n              fullWidth\n            >\n                <AutocompleteInput optionText=\"name\" />\n            </ReferenceInput>\n          </Grid>\n        </Grid>\n        {/* Check fields existence before rendering  */}\n          <ReferenceManyField label = 'Company Borrower Ownership Percentage' reference = 'borrower_company_ownerships' target = 'borrowers'>\n          <Datagrid>\n            <FieldGuesser source = 'contact' />\n            <FieldGuesser source = 'ownershipPercent' />\n          </Datagrid>\n        </ReferenceManyField>\n    </>\n    )\n}\n\n\n\n\nconst BorrowerEditFormField = ({ record }) => {\n  const editFields = (record.company) ? <CompanyOptions /> : <ContactOptions />;\n  return editFields;\n}\nexport default BorrowerEditFormField;","/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/borrowers/BorrowerFormField.js",["287","288","289","290","291","292","293","294","295","296","297","298"],"import React, {useState, useRef} from 'react';\nimport {\n  ReferenceInput,\n  AutocompleteInput,\n  SelectInput\n} from 'react-admin';\nimport ContactFormField from '../contacts/ContactFormField';\nimport CompanyFormField from '../companies/CompanyFormField';\nimport ModalCreateButton from '../helpers/ModalCreateButton'; \nimport { Grid, Typography, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport BusinessIcon from '@material-ui/icons/Business';\n\n\nconst ContactBorrowerFormField = (props) => {\n  const {isDisabled} = props;\n  return (\n    <>\n          <Grid item xs={10} sm={10}>\n            <ReferenceInput\n              source=\"contact\"\n              reference=\"contacts\"\n              label=\"Contact\"\n              allowEmpty\n              fullWidth\n            >\n              <SelectInput  optionText = {contact => `${contact.firstName}` + ' ' + `${contact.lastName}` }  />\n            </ReferenceInput>\n          </Grid>\n          <Grid item xs={2} sm={2}>\n            <ModalCreateButton\n                dialogResource=\"contacts\"\n                dialogFormField=\"contacts\"\n                dialogTitle=\"Add a Contact\"\n                actionTypeCreate\n            >\n                    <ContactFormField />\n            </ModalCreateButton>\n          </Grid>\n    </>\n  )\n}\n\nconst CompanyBorrowerFormField = (props) => {\n  const {isDisabled} = props;\n  return(\n    <>\n            <Grid item xs={10} sm={10}>\n              <ReferenceInput\n                source=\"company\"\n                reference=\"companies\"\n                label=\"Company\"\n                fullWidth\n                allowEmpty\n              >\n                  <SelectInput optionText=\"name\" />\n              </ReferenceInput>\n            </Grid>\n            <Grid item xs={2} sm={2}>\n              <ModalCreateButton\n                  dialogResource=\"companies\"\n                  dialogFormField=\"companies\"\n                  dialogTitle=\"Add a Company\"\n                  actionTypeCreate\n                  >\n                      <CompanyFormField />\n              </ModalCreateButton>\n            </Grid>\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    width: '8rem',\n    height: '8rem',\n    '& svg': {\n      fontSize: '4.5rem'\n    },\n    marginBottom: '2rem'\n  }\n}));\n\nconst BorrowerFormField = ({ record }) => {\n  const [option, setOption] = useState(0);\n  const [input, setInput] = useState(null);\n  const classes = useStyles();\n\n  const handleClick = event => {\n    setOption(event.target.value);\n  }\n  return (\n    <>\n      <Grid  container direction = 'row' justify = 'center' alignItems = 'center' spacing={3}>\n        <Grid item xs = {12}>\n          <Typography variant = 'subtitle1' color = 'textSecondary' style = {{marginBottom: '1rem'}}>\n              Select the type of borrower you wish to create\n         </Typography>\n        </Grid>\n        <Grid item xs = {12} sm = {6}>\n          <Grid container direction = 'column' justify = 'center' alignItems = 'center' spacing = {1}>\n            <Grid item>\n              <Typography variant = 'subtitle1'>Contact</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton color = {(option == 1) ? 'primary' : 'secondary'} value = {1} className = {classes.iconButton} onClick = {handleClick}>\n                <ContactsIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs = {12} sm = {6}>\n          <Grid container direction = 'column' justify = 'center' alignItems = 'center' spacing = {1}>\n            <Grid item>\n              <Typography variant = 'subtitle1'>Company</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton color = {(option == 2) ? 'primary' : 'secondary'} value = {2}  className = {classes.iconButton} onClick = {handleClick}>\n                <BusinessIcon/>\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n              {(option == 1) ? <ContactBorrowerFormField key = {option} /> : (\n                (option == 2) ? <CompanyBorrowerFormField key = {option} /> : null)}\n        </Grid>\n    </Grid>\n    </>\n  )\n}\nexport default BorrowerFormField;",["299","300"],"/Users/Owen/Desktop/Endertech/bridgeLoan/bridge-loan-react-admin/src/components/financing_sources/FinancingSourceFormField.js",[],{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":4,"column":8,"nodeType":"307","messageId":"308","endLine":4,"endColumn":20},{"ruleId":"309","severity":1,"message":"310","line":11,"column":1,"nodeType":"311","endLine":16,"endColumn":3},{"ruleId":"305","severity":1,"message":"312","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":20},{"ruleId":"305","severity":1,"message":"313","line":4,"column":5,"nodeType":"307","messageId":"308","endLine":4,"endColumn":13},{"ruleId":"305","severity":1,"message":"314","line":11,"column":5,"nodeType":"307","messageId":"308","endLine":11,"endColumn":24},{"ruleId":"301","replacedBy":"315"},{"ruleId":"303","replacedBy":"316"},{"ruleId":"305","severity":1,"message":"317","line":1,"column":16,"nodeType":"307","messageId":"308","endLine":1,"endColumn":28},{"ruleId":"305","severity":1,"message":"318","line":3,"column":9,"nodeType":"307","messageId":"308","endLine":3,"endColumn":13},{"ruleId":"305","severity":1,"message":"319","line":3,"column":15,"nodeType":"307","messageId":"308","endLine":3,"endColumn":23},{"ruleId":"305","severity":1,"message":"320","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":27},{"ruleId":"305","severity":1,"message":"319","line":2,"column":52,"nodeType":"307","messageId":"308","endLine":2,"endColumn":60},{"ruleId":"305","severity":1,"message":"321","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":16},{"ruleId":"305","severity":1,"message":"322","line":3,"column":18,"nodeType":"307","messageId":"308","endLine":3,"endColumn":28},{"ruleId":"305","severity":1,"message":"323","line":20,"column":7,"nodeType":"307","messageId":"308","endLine":20,"endColumn":27},{"ruleId":"305","severity":1,"message":"324","line":20,"column":7,"nodeType":"307","messageId":"308","endLine":20,"endColumn":24},{"ruleId":"305","severity":1,"message":"313","line":4,"column":5,"nodeType":"307","messageId":"308","endLine":4,"endColumn":13},{"ruleId":"305","severity":1,"message":"314","line":11,"column":5,"nodeType":"307","messageId":"308","endLine":11,"endColumn":24},{"ruleId":"309","severity":1,"message":"325","line":3,"column":1,"nodeType":"311","endLine":51,"endColumn":3},{"ruleId":"305","severity":1,"message":"326","line":1,"column":8,"nodeType":"307","messageId":"308","endLine":1,"endColumn":13},{"ruleId":"309","severity":1,"message":"327","line":10,"column":1,"nodeType":"311","endLine":19,"endColumn":3},{"ruleId":"305","severity":1,"message":"328","line":4,"column":65,"nodeType":"307","messageId":"308","endLine":4,"endColumn":74},{"ruleId":"305","severity":1,"message":"329","line":13,"column":10,"nodeType":"307","messageId":"308","endLine":13,"endColumn":18},{"ruleId":"305","severity":1,"message":"330","line":14,"column":9,"nodeType":"307","messageId":"308","endLine":14,"endColumn":16},{"ruleId":"305","severity":1,"message":"331","line":16,"column":11,"nodeType":"307","messageId":"308","endLine":16,"endColumn":17},{"ruleId":"305","severity":1,"message":"332","line":8,"column":3,"nodeType":"307","messageId":"308","endLine":8,"endColumn":19},{"ruleId":"305","severity":1,"message":"333","line":10,"column":3,"nodeType":"307","messageId":"308","endLine":10,"endColumn":8},{"ruleId":"305","severity":1,"message":"334","line":12,"column":3,"nodeType":"307","messageId":"308","endLine":12,"endColumn":11},{"ruleId":"305","severity":1,"message":"335","line":23,"column":10,"nodeType":"307","messageId":"308","endLine":23,"endColumn":15},{"ruleId":"336","severity":1,"message":"337","line":41,"column":4,"nodeType":"338","endLine":41,"endColumn":6,"suggestions":"339"},{"ruleId":"336","severity":1,"message":"340","line":45,"column":6,"nodeType":"338","endLine":45,"endColumn":22,"suggestions":"341"},{"ruleId":"305","severity":1,"message":"342","line":2,"column":21,"nodeType":"307","messageId":"308","endLine":2,"endColumn":33},{"ruleId":"305","severity":1,"message":"343","line":1,"column":16,"nodeType":"307","messageId":"308","endLine":1,"endColumn":24},{"ruleId":"305","severity":1,"message":"344","line":1,"column":26,"nodeType":"307","messageId":"308","endLine":1,"endColumn":32},{"ruleId":"305","severity":1,"message":"345","line":13,"column":7,"nodeType":"307","messageId":"308","endLine":13,"endColumn":16},{"ruleId":"346","severity":1,"message":"347","line":28,"column":83,"nodeType":"348","messageId":"349","endLine":28,"endColumn":84},{"ruleId":"346","severity":1,"message":"347","line":28,"column":89,"nodeType":"348","messageId":"349","endLine":28,"endColumn":90},{"ruleId":"305","severity":1,"message":"350","line":1,"column":40,"nodeType":"307","messageId":"308","endLine":1,"endColumn":48},{"ruleId":"305","severity":1,"message":"330","line":17,"column":9,"nodeType":"307","messageId":"308","endLine":17,"endColumn":16},{"ruleId":"305","severity":1,"message":"331","line":19,"column":11,"nodeType":"307","messageId":"308","endLine":19,"endColumn":17},{"ruleId":"305","severity":1,"message":"332","line":11,"column":3,"nodeType":"307","messageId":"308","endLine":11,"endColumn":19},{"ruleId":"305","severity":1,"message":"351","line":12,"column":3,"nodeType":"307","messageId":"308","endLine":12,"endColumn":13},{"ruleId":"305","severity":1,"message":"352","line":13,"column":3,"nodeType":"307","messageId":"308","endLine":13,"endColumn":10},{"ruleId":"305","severity":1,"message":"353","line":21,"column":10,"nodeType":"307","messageId":"308","endLine":21,"endColumn":26},{"ruleId":"305","severity":1,"message":"354","line":21,"column":28,"nodeType":"307","messageId":"308","endLine":21,"endColumn":36},{"ruleId":"305","severity":1,"message":"355","line":21,"column":38,"nodeType":"307","messageId":"308","endLine":21,"endColumn":48},{"ruleId":"305","severity":1,"message":"356","line":53,"column":9,"nodeType":"307","messageId":"308","endLine":53,"endColumn":21},{"ruleId":"305","severity":1,"message":"343","line":1,"column":16,"nodeType":"307","messageId":"308","endLine":1,"endColumn":24},{"ruleId":"305","severity":1,"message":"344","line":1,"column":26,"nodeType":"307","messageId":"308","endLine":1,"endColumn":32},{"ruleId":"305","severity":1,"message":"332","line":7,"column":3,"nodeType":"307","messageId":"308","endLine":7,"endColumn":19},{"ruleId":"305","severity":1,"message":"351","line":8,"column":3,"nodeType":"307","messageId":"308","endLine":8,"endColumn":13},{"ruleId":"305","severity":1,"message":"352","line":9,"column":3,"nodeType":"307","messageId":"308","endLine":9,"endColumn":10},{"ruleId":"346","severity":1,"message":"347","line":28,"column":83,"nodeType":"348","messageId":"349","endLine":28,"endColumn":84},{"ruleId":"346","severity":1,"message":"347","line":28,"column":89,"nodeType":"348","messageId":"349","endLine":28,"endColumn":90},{"ruleId":"305","severity":1,"message":"344","line":1,"column":26,"nodeType":"307","messageId":"308","endLine":1,"endColumn":32},{"ruleId":"305","severity":1,"message":"357","line":4,"column":3,"nodeType":"307","messageId":"308","endLine":4,"endColumn":20},{"ruleId":"305","severity":1,"message":"358","line":17,"column":10,"nodeType":"307","messageId":"308","endLine":17,"endColumn":20},{"ruleId":"346","severity":1,"message":"347","line":28,"column":77,"nodeType":"348","messageId":"349","endLine":28,"endColumn":78},{"ruleId":"346","severity":1,"message":"347","line":28,"column":83,"nodeType":"348","messageId":"349","endLine":28,"endColumn":84},{"ruleId":"305","severity":1,"message":"358","line":46,"column":10,"nodeType":"307","messageId":"308","endLine":46,"endColumn":20},{"ruleId":"305","severity":1,"message":"359","line":87,"column":10,"nodeType":"307","messageId":"308","endLine":87,"endColumn":15},{"ruleId":"305","severity":1,"message":"360","line":87,"column":17,"nodeType":"307","messageId":"308","endLine":87,"endColumn":25},{"ruleId":"361","severity":1,"message":"362","line":107,"column":44,"nodeType":"348","messageId":"363","endLine":107,"endColumn":46},{"ruleId":"361","severity":1,"message":"362","line":119,"column":44,"nodeType":"348","messageId":"363","endLine":119,"endColumn":46},{"ruleId":"361","severity":1,"message":"362","line":126,"column":24,"nodeType":"348","messageId":"363","endLine":126,"endColumn":26},{"ruleId":"361","severity":1,"message":"362","line":127,"column":25,"nodeType":"348","messageId":"363","endLine":127,"endColumn":27},{"ruleId":"301","replacedBy":"364"},{"ruleId":"303","replacedBy":"365"},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"no-unused-vars","'authProvider' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'SaveButton' is defined but never used.","'required' is defined but never used.","'SaveContextProvider' is defined but never used.",["366"],["367"],"'cloneElement' is defined but never used.","'List' is defined but never used.","'Datagrid' is defined but never used.","'DashboardMenuItem' is defined but never used.","'Create' is defined but never used.","'SimpleForm' is defined but never used.","'FinancingSourceTitle' is assigned a value but never used.","'LienPositionTitle' is assigned a value but never used.","Assign object to a variable before exporting as module default","'React' is defined but never used.","Assign array to a variable before exporting as module default","'TextField' is defined but never used.","'disabled' is assigned a value but never used.","'classes' is assigned a value but never used.","'values' is assigned a value but never used.","'FormDataConsumer' is defined but never used.","'Error' is defined but never used.","'useInput' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataProvider' and 'projectId'. Either include them or remove the dependency array.","ArrayExpression",["368"],"React Hook useEffect has a missing dependency: 'totalFinancingAmount'. Either include it or remove the dependency array.",["369"],"'ReactElement' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useStyles' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Children' is defined but never used.","'TabbedForm' is defined but never used.","'FormTab' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'handleChange' is assigned a value but never used.","'AutocompleteInput' is defined but never used.","'isDisabled' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected",["366"],["367"],"no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},"Update the dependencies array to be: [dataProvider, projectId]",{"range":"374","text":"375"},"Update the dependencies array to be: [change, amount, totalFinancingAmount]",{"range":"376","text":"377"},[1351,1353],"[dataProvider, projectId]",[1458,1474],"[change, amount, totalFinancingAmount]"]